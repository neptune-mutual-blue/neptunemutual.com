---
import { bytes32ToString } from "../../../util/protocol";
import { capitalizeFirstLetter } from "../../../util/capitalize-first-letter";
import Icon from "../../elements/Icon.astro";

interface Props {
  contract: KeyValuePair<string>;
  network: NetworkConfig;
  type: ProtocolContractType;
  convertBytes32?: boolean;
}

const { contract, network, convertBytes32, type } = Astro.props;
const name = convertBytes32 ? bytes32ToString(contract.key) : contract.key;

let abi = "";

if (type === "cxTokens") {
  abi = "ICxToken";
} else if (type === "pods") {
  abi = "IVault";
} else if (name === "NPM" || name === "Stablecoin") {
  abi = "IERC20";
} else if (name === "Processor") {
  abi = "IClaimsProcessor";
} else if (name) {
  // capitalize first letter of name for contract names like cxTokenFactory
  abi = `I${capitalizeFirstLetter(name)}`;
}
---

<div class="contract card item">
  <p class="contract name">{name}</p>

  <p class="contract address">{contract.value}</p>

  <div class="icons">
    <a
      href={`${network.explorer}${contract.value}`}
      target="_blank"
      rel="nofollow"
    >
      <Icon variant={"link-03"} />
    </a>
    <a
      href={`/web3-tools/solidity-abi-encoder-online/?name=${name}&address=${contract.value}&abi=${abi}&network=${network.id}`}
    >
      <Icon variant={"arrow-circle-right"} />
    </a>
  </div>
</div>
